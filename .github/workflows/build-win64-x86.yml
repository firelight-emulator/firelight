name: Build win64_x86

on:
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  CMAKE_GENERATOR: Ninja

defaults:
  run:
    shell: msys2 {0}

jobs:
  build:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}

    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: 'MINGW64'
          cache: true
          install: >-
            make
            git
          pacboy: >-
            cmake:p
            ninja:p
            clang:p
            clang-tools-extra:p
            toolchain:p
            gtest:p
            qt6:p
            gettext:p
            qt6-tools:p
            ffmpeg:p
            SDL2:p
            cpr:p
            spdlog:p
            nsis:p
            nlohmann-json:p
            libarchive:p

      - run: ln -s "${MSYSTEM_PREFIX}/bin/qtpaths-qt6.exe" "${MSYSTEM_PREFIX}/bin/qtpaths.exe"

      - run: git config --global core.autocrlf input

      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Configure CMake
        run: cmake -B build -G "${{env.CMAKE_GENERATOR}}" -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build build

      - name: Run unit tests
        working-directory: build
        run: ctest --output-on-failure

      - name: Build zip
        working-directory: build
        run: cpack -G ZIP

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: firelight-zip-win-x64
          path: build/firelight-emulator-0.6.0-win64.zip

        # - name: Prepare artifact
        #   run: |
        #     cp /mingw64/bin/SDL2.dll build/
        #     cp /mingw64/bin/libcrypto-3-x64.dll build/
        #     ${GITHUB_WORKSPACE}/../Qt/6.6.2/mingw_64/bin/windeployqt build/firelight.exe --compiler-runtime


        # - name: Build
        #   # Build your program with the given configuration
        #   run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

        # - name: Test
        #   working-directory: ${{github.workspace}}/build
        # Execute tests defined by the CMake configuration.
        # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
        # run: ctest -C ${{env.BUILD_TYPE}}

